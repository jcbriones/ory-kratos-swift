//
// OryUpdateLoginFlowWithCodeMethod.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Update Login flow using the code method */
public struct OryUpdateLoginFlowWithCodeMethod: Sendable, Codable, ParameterConvertible, Hashable {

    /** Address is the address to send the code to, in case that there are multiple addresses. This field is only used in two-factor flows and is ineffective for passwordless flows. */
    public var address: String?
    /** Code is the 6 digits code sent to the user */
    public var code: String?
    /** CSRFToken is the anti-CSRF token */
    public var csrfToken: String
    /** Identifier is the code identifier The identifier requires that the user has already completed the registration or settings with code flow. */
    public var identifier: String?
    /** Method should be set to \"code\" when logging in using the code strategy. */
    public var method: String
    /** Resend is set when the user wants to resend the code */
    public var resend: String?
    /** Transient data to pass along to any webhooks */
    public var transientPayload: JSONValue?

    public init(address: String? = nil, code: String? = nil, csrfToken: String, identifier: String? = nil, method: String, resend: String? = nil, transientPayload: JSONValue? = nil) {
        self.address = address
        self.code = code
        self.csrfToken = csrfToken
        self.identifier = identifier
        self.method = method
        self.resend = resend
        self.transientPayload = transientPayload
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case address
        case code
        case csrfToken = "csrf_token"
        case identifier
        case method
        case resend
        case transientPayload = "transient_payload"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(address, forKey: .address)
        try container.encodeIfPresent(code, forKey: .code)
        try container.encode(csrfToken, forKey: .csrfToken)
        try container.encodeIfPresent(identifier, forKey: .identifier)
        try container.encode(method, forKey: .method)
        try container.encodeIfPresent(resend, forKey: .resend)
        try container.encodeIfPresent(transientPayload, forKey: .transientPayload)
    }
}

