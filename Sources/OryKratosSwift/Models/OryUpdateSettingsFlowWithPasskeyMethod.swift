//
// OryUpdateSettingsFlowWithPasskeyMethod.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Update Settings Flow with Passkey Method */
public struct OryUpdateSettingsFlowWithPasskeyMethod: Sendable, Codable, ParameterConvertible, Hashable {

    /** CSRFToken is the anti-CSRF token */
    public var csrfToken: String?
    /** Method  Should be set to \"passkey\" when trying to add, update, or remove a webAuthn pairing. */
    public var method: String
    /** Remove a WebAuthn Security Key  This must contain the ID of the WebAuthN connection. */
    public var passkeyRemove: String?
    /** Register a WebAuthn Security Key  It is expected that the JSON returned by the WebAuthn registration process is included here. */
    public var passkeySettingsRegister: String?

    public init(csrfToken: String? = nil, method: String, passkeyRemove: String? = nil, passkeySettingsRegister: String? = nil) {
        self.csrfToken = csrfToken
        self.method = method
        self.passkeyRemove = passkeyRemove
        self.passkeySettingsRegister = passkeySettingsRegister
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case csrfToken = "csrf_token"
        case method
        case passkeyRemove = "passkey_remove"
        case passkeySettingsRegister = "passkey_settings_register"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(csrfToken, forKey: .csrfToken)
        try container.encode(method, forKey: .method)
        try container.encodeIfPresent(passkeyRemove, forKey: .passkeyRemove)
        try container.encodeIfPresent(passkeySettingsRegister, forKey: .passkeySettingsRegister)
    }
}

