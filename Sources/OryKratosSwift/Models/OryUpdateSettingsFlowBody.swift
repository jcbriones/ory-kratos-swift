//
// OryUpdateSettingsFlowBody.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Update Settings Flow Request Body */
public enum OryUpdateSettingsFlowBody: Sendable, Codable, ParameterConvertible, Hashable {
    case typeOryUpdateSettingsFlowWithLookupMethod(OryUpdateSettingsFlowWithLookupMethod)
    case typeOryUpdateSettingsFlowWithOidcMethod(OryUpdateSettingsFlowWithOidcMethod)
    case typeOryUpdateSettingsFlowWithPasskeyMethod(OryUpdateSettingsFlowWithPasskeyMethod)
    case typeOryUpdateSettingsFlowWithPasswordMethod(OryUpdateSettingsFlowWithPasswordMethod)
    case typeOryUpdateSettingsFlowWithProfileMethod(OryUpdateSettingsFlowWithProfileMethod)
    case typeOryUpdateSettingsFlowWithTotpMethod(OryUpdateSettingsFlowWithTotpMethod)
    case typeOryUpdateSettingsFlowWithWebAuthnMethod(OryUpdateSettingsFlowWithWebAuthnMethod)

    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case .typeOryUpdateSettingsFlowWithLookupMethod(let value):
            try container.encode(value)
        case .typeOryUpdateSettingsFlowWithOidcMethod(let value):
            try container.encode(value)
        case .typeOryUpdateSettingsFlowWithPasskeyMethod(let value):
            try container.encode(value)
        case .typeOryUpdateSettingsFlowWithPasswordMethod(let value):
            try container.encode(value)
        case .typeOryUpdateSettingsFlowWithProfileMethod(let value):
            try container.encode(value)
        case .typeOryUpdateSettingsFlowWithTotpMethod(let value):
            try container.encode(value)
        case .typeOryUpdateSettingsFlowWithWebAuthnMethod(let value):
            try container.encode(value)
        }
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        if let value = try? container.decode(OryUpdateSettingsFlowWithLookupMethod.self) {
            self = .typeOryUpdateSettingsFlowWithLookupMethod(value)
        } else if let value = try? container.decode(OryUpdateSettingsFlowWithOidcMethod.self) {
            self = .typeOryUpdateSettingsFlowWithOidcMethod(value)
        } else if let value = try? container.decode(OryUpdateSettingsFlowWithPasskeyMethod.self) {
            self = .typeOryUpdateSettingsFlowWithPasskeyMethod(value)
        } else if let value = try? container.decode(OryUpdateSettingsFlowWithPasswordMethod.self) {
            self = .typeOryUpdateSettingsFlowWithPasswordMethod(value)
        } else if let value = try? container.decode(OryUpdateSettingsFlowWithProfileMethod.self) {
            self = .typeOryUpdateSettingsFlowWithProfileMethod(value)
        } else if let value = try? container.decode(OryUpdateSettingsFlowWithTotpMethod.self) {
            self = .typeOryUpdateSettingsFlowWithTotpMethod(value)
        } else if let value = try? container.decode(OryUpdateSettingsFlowWithWebAuthnMethod.self) {
            self = .typeOryUpdateSettingsFlowWithWebAuthnMethod(value)
        } else {
            throw DecodingError.typeMismatch(Self.Type.self, .init(codingPath: decoder.codingPath, debugDescription: "Unable to decode instance of OryUpdateSettingsFlowBody"))
        }
    }
}

