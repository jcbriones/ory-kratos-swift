//
// OryUiNodeInputAttributes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** InputAttributes represents the attributes of an input node */
public struct OryUiNodeInputAttributes: Sendable, Codable, ParameterConvertible, Hashable {

    public enum OryAutocomplete: String, Sendable, Codable, CaseIterable {
        case email = "email"
        case tel = "tel"
        case url = "url"
        case currentPassword = "current-password"
        case newPassword = "new-password"
        case oneTimeCode = "one-time-code"
    }
    public enum OryNodeType: String, Sendable, Codable, CaseIterable {
        case text = "text"
        case input = "input"
        case img = "img"
        case a = "a"
        case script = "script"
    }
    public enum OryOnclickTrigger: String, Sendable, Codable, CaseIterable {
        case orywebauthnregistration = "oryWebAuthnRegistration"
        case orywebauthnlogin = "oryWebAuthnLogin"
        case orypasskeylogin = "oryPasskeyLogin"
        case orypasskeyloginautocompleteinit = "oryPasskeyLoginAutocompleteInit"
        case orypasskeyregistration = "oryPasskeyRegistration"
        case orypasskeysettingsregistration = "oryPasskeySettingsRegistration"
    }
    public enum OryOnloadTrigger: String, Sendable, Codable, CaseIterable {
        case orywebauthnregistration = "oryWebAuthnRegistration"
        case orywebauthnlogin = "oryWebAuthnLogin"
        case orypasskeylogin = "oryPasskeyLogin"
        case orypasskeyloginautocompleteinit = "oryPasskeyLoginAutocompleteInit"
        case orypasskeyregistration = "oryPasskeyRegistration"
        case orypasskeysettingsregistration = "oryPasskeySettingsRegistration"
    }
    public enum OryType: String, Sendable, Codable, CaseIterable {
        case text = "text"
        case password = "password"
        case number = "number"
        case checkbox = "checkbox"
        case hidden = "hidden"
        case email = "email"
        case tel = "tel"
        case submit = "submit"
        case button = "button"
        case datetimeLocal = "datetime-local"
        case date = "date"
        case url = "url"
    }
    /** The autocomplete attribute for the input. email InputAttributeAutocompleteEmail tel InputAttributeAutocompleteTel url InputAttributeAutocompleteUrl current-password InputAttributeAutocompleteCurrentPassword new-password InputAttributeAutocompleteNewPassword one-time-code InputAttributeAutocompleteOneTimeCode */
    public var autocomplete: OryAutocomplete?
    /** Sets the input's disabled field to true or false. */
    public var disabled: Bool
    public var label: OryUiText?
    /** MaxLength may contain the input's maximum length. */
    public var maxlength: Int64?
    /** The input's element name. */
    public var name: String
    /** NodeType represents this node's types. It is a mirror of `node.type` and is primarily used to allow compatibility with OpenAPI 3.0.  In this struct it technically always is \"input\". text Text input Input img Image a Anchor script Script */
    public var nodeType: OryNodeType
    /** OnClick may contain javascript which should be executed on click. This is primarily used for WebAuthn.  Deprecated: Using OnClick requires the use of eval() which is a security risk. Use OnClickTrigger instead. */
    public var onclick: String?
    /** OnClickTrigger may contain a WebAuthn trigger which should be executed on click.  The trigger maps to a JavaScript function provided by Ory, which triggers actions such as PassKey registration or login. oryWebAuthnRegistration WebAuthnTriggersWebAuthnRegistration oryWebAuthnLogin WebAuthnTriggersWebAuthnLogin oryPasskeyLogin WebAuthnTriggersPasskeyLogin oryPasskeyLoginAutocompleteInit WebAuthnTriggersPasskeyLoginAutocompleteInit oryPasskeyRegistration WebAuthnTriggersPasskeyRegistration oryPasskeySettingsRegistration WebAuthnTriggersPasskeySettingsRegistration */
    public var onclickTrigger: OryOnclickTrigger?
    /** OnLoad may contain javascript which should be executed on load. This is primarily used for WebAuthn.  Deprecated: Using OnLoad requires the use of eval() which is a security risk. Use OnLoadTrigger instead. */
    public var onload: String?
    /** OnLoadTrigger may contain a WebAuthn trigger which should be executed on load.  The trigger maps to a JavaScript function provided by Ory, which triggers actions such as PassKey registration or login. oryWebAuthnRegistration WebAuthnTriggersWebAuthnRegistration oryWebAuthnLogin WebAuthnTriggersWebAuthnLogin oryPasskeyLogin WebAuthnTriggersPasskeyLogin oryPasskeyLoginAutocompleteInit WebAuthnTriggersPasskeyLoginAutocompleteInit oryPasskeyRegistration WebAuthnTriggersPasskeyRegistration oryPasskeySettingsRegistration WebAuthnTriggersPasskeySettingsRegistration */
    public var onloadTrigger: OryOnloadTrigger?
    /** The input's pattern. */
    public var pattern: String?
    /** Mark this input field as required. */
    public var _required: Bool?
    /** The input's element type. text InputAttributeTypeText password InputAttributeTypePassword number InputAttributeTypeNumber checkbox InputAttributeTypeCheckbox hidden InputAttributeTypeHidden email InputAttributeTypeEmail tel InputAttributeTypeTel submit InputAttributeTypeSubmit button InputAttributeTypeButton datetime-local InputAttributeTypeDateTimeLocal date InputAttributeTypeDate url InputAttributeTypeURI */
    public var type: OryType
    /** The input's value. */
    public var value: JSONValue?

    public init(autocomplete: OryAutocomplete? = nil, disabled: Bool, label: OryUiText? = nil, maxlength: Int64? = nil, name: String, nodeType: OryNodeType, onclick: String? = nil, onclickTrigger: OryOnclickTrigger? = nil, onload: String? = nil, onloadTrigger: OryOnloadTrigger? = nil, pattern: String? = nil, _required: Bool? = nil, type: OryType, value: JSONValue? = nil) {
        self.autocomplete = autocomplete
        self.disabled = disabled
        self.label = label
        self.maxlength = maxlength
        self.name = name
        self.nodeType = nodeType
        self.onclick = onclick
        self.onclickTrigger = onclickTrigger
        self.onload = onload
        self.onloadTrigger = onloadTrigger
        self.pattern = pattern
        self._required = _required
        self.type = type
        self.value = value
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case autocomplete
        case disabled
        case label
        case maxlength
        case name
        case nodeType = "node_type"
        case onclick
        case onclickTrigger
        case onload
        case onloadTrigger
        case pattern
        case _required = "required"
        case type
        case value
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(autocomplete, forKey: .autocomplete)
        try container.encode(disabled, forKey: .disabled)
        try container.encodeIfPresent(label, forKey: .label)
        try container.encodeIfPresent(maxlength, forKey: .maxlength)
        try container.encode(name, forKey: .name)
        try container.encode(nodeType, forKey: .nodeType)
        try container.encodeIfPresent(onclick, forKey: .onclick)
        try container.encodeIfPresent(onclickTrigger, forKey: .onclickTrigger)
        try container.encodeIfPresent(onload, forKey: .onload)
        try container.encodeIfPresent(onloadTrigger, forKey: .onloadTrigger)
        try container.encodeIfPresent(pattern, forKey: .pattern)
        try container.encodeIfPresent(_required, forKey: ._required)
        try container.encode(type, forKey: .type)
        try container.encodeIfPresent(value, forKey: .value)
    }
}

