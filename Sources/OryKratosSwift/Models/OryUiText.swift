//
// OryUiText.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct OryUiText: Sendable, Codable, ParameterConvertible, Hashable {

    public enum OryType: String, Sendable, Codable, CaseIterable {
        case info = "info"
        case error = "error"
        case success = "success"
    }
    /** The message's context. Useful when customizing messages. */
    public var context: JSONValue?
    public var id: Int64
    /** The message text. Written in american english. */
    public var text: String
    /** The message type. info Info error Error success Success */
    public var type: OryType

    public init(context: JSONValue? = nil, id: Int64, text: String, type: OryType) {
        self.context = context
        self.id = id
        self.text = text
        self.type = type
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case context
        case id
        case text
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(context, forKey: .context)
        try container.encode(id, forKey: .id)
        try container.encode(text, forKey: .text)
        try container.encode(type, forKey: .type)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension OryUiText: Identifiable {}
