//
// OryRecoveryFlow.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** This request is used when an identity wants to recover their account.  We recommend reading the [Account Recovery Documentation](../self-service/flows/password-reset-account-recovery) */
public struct OryRecoveryFlow: Sendable, Codable, ParameterConvertible, Hashable {

    /** Active, if set, contains the recovery method that is being used. It is initially not set. */
    public var active: String?
    /** Contains possible actions that could follow this flow */
    public var continueWith: [OryContinueWith]?
    /** ExpiresAt is the time (UTC) when the request expires. If the user still wishes to update the setting, a new request has to be initiated. */
    public var expiresAt: Date
    /** ID represents the request's unique ID. When performing the recovery flow, this represents the id in the recovery ui's query parameter: http://<selfservice.flows.recovery.ui_url>?request=<id> */
    public var id: String
    /** IssuedAt is the time (UTC) when the request occurred. */
    public var issuedAt: Date
    /** RequestURL is the initial URL that was requested from Ory Kratos. It can be used to forward information contained in the URL's path or query for example. */
    public var requestUrl: String
    /** ReturnTo contains the requested return_to URL. */
    public var returnTo: String?
    /** State represents the state of this request:  choose_method: ask the user to choose a method (e.g. recover account via email) sent_email: the email has been sent to the user passed_challenge: the request was successful and the recovery challenge was passed. */
    public var state: JSONValue?
    /** TransientPayload is used to pass data from the recovery flow to hooks and email templates */
    public var transientPayload: JSONValue?
    /** The flow type can either be `api` or `browser`. */
    public var type: String
    public var ui: OryUiContainer

    public init(active: String? = nil, continueWith: [OryContinueWith]? = nil, expiresAt: Date, id: String, issuedAt: Date, requestUrl: String, returnTo: String? = nil, state: JSONValue?, transientPayload: JSONValue? = nil, type: String, ui: OryUiContainer) {
        self.active = active
        self.continueWith = continueWith
        self.expiresAt = expiresAt
        self.id = id
        self.issuedAt = issuedAt
        self.requestUrl = requestUrl
        self.returnTo = returnTo
        self.state = state
        self.transientPayload = transientPayload
        self.type = type
        self.ui = ui
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case active
        case continueWith = "continue_with"
        case expiresAt = "expires_at"
        case id
        case issuedAt = "issued_at"
        case requestUrl = "request_url"
        case returnTo = "return_to"
        case state
        case transientPayload = "transient_payload"
        case type
        case ui
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(active, forKey: .active)
        try container.encodeIfPresent(continueWith, forKey: .continueWith)
        try container.encode(expiresAt, forKey: .expiresAt)
        try container.encode(id, forKey: .id)
        try container.encode(issuedAt, forKey: .issuedAt)
        try container.encode(requestUrl, forKey: .requestUrl)
        try container.encodeIfPresent(returnTo, forKey: .returnTo)
        try container.encode(state, forKey: .state)
        try container.encodeIfPresent(transientPayload, forKey: .transientPayload)
        try container.encode(type, forKey: .type)
        try container.encode(ui, forKey: .ui)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension OryRecoveryFlow: Identifiable {}
